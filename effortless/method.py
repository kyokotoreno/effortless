from .config import getConfig

class Method:
    template = """{t}{accessor} {return_type} {name} {{
{t}    throw new java.lang.UnsupportedOperationException("Autogenerated Method!");
{t}}}
"""

    def __init__(self, method):
        self.accessor = getConfig(method, 'accessor')
        self.return_type = getConfig(method, 'return_type')
        self.name = getConfig(method, 'name')

    def fromMethods(methods):
        objs = []

        if methods:
            for method in methods:
                objs.append(Method(method))

        return objs

    def generate(self, t):
        return self.template.format(t=t, accessor=self.accessor, return_type=self.return_type, name=self.name)
